@import "../base";

// can't target
// movement-config
// polymorph-prompt
// select-items-prompt
// sense config
// trait-selector

body#{$emu}.system-dnd5e {
	.dnd5e {
		@extend %clean-elements;

		.window-content {
			@include layout {
				display: initial;
			}
		}

		.form-group {
			label {
				color: color("text");
			}
		}

		.form-header {
			border-block-start: b("border-lighter");
			border-block-end: b("border-lighter");
		}

		.tag {
			border-color: color("border");
		}

		&.sheet {
			.window-content {
				color: color("text");

				@include layout {
					padding: 0;
				}

				form {
					@include layout {
						gap: initial;
					}
				}
			}

			input[type="text"],
			input[type="number"] {
				border-color: transparent;

				&:hover,
				&:focus {
					border-color: color("border");
				}
			}

			.editable h4.rollable:hover,
			.editable .rollable:hover > h4 {
				color: color("primary");
				text-shadow: none;
			}

			span.sep {
				color: color("text-darker");
			}

			.sheet-header {
				border-block-end: b("border-lighter");

				@include layout {
					gap: initial;
				}

				img.profile {
					border-inline-end: b("border-lighter");
				}

				.summary {
					border-block-start: b("border-lighter");

					li {
						border-inline-end: b("border-lighter");
						color: color("text");

						&:last-child {
							border-inline-end: none;
						}
					}
				}

				.header-details {
					// font-family: inherit;

					h1 {
						border: none;
					}
				}
			}

			.sheet-navigation {
				// font-family: inherit;

				.item {
					border-color: color("border");
					text-shadow: none;

					&:hover {
						color: color("primary");
					}

					&.active {
						border-color: color("primary");
						color: color("primary");
					}
				}
			}

			.filter-list {
				.filter-icon {
					color: color("text");
				}

				.filter-item {
					border-color: color("border");
					text-shadow: none;

					&:hover {
						border-color: color("border-lighter");
						color: color("primary");

					}

					&.active {
						border-color: color("primary");
						color: color("primary");
					}
				}
			}

			.traits .trait-selector {
				color: color("text");
			}

			.items-list {
				color: color("text");

				.item {
					border-color: color("border-lighter");

					.item-name {
						color: color("text");
					}
				}

				.items-header {
					border: b("border-lighter");

					h3 {
						// font-family: inherit;
					}
				}
			}

			.effects .item .effect-source,
			.effects .item .effect-duration,
			.effects .item .effect-controls {
				border-color: color("border-lighter");
			}
		}

		&.sheet.actor {
			.sheet-header {
				.summary {
					border-block-end: b("border-lighter");
				}

				.attributes .attribute {
					border-inline-end: b("border-lighter");

					&:last-child {
						border-inline-end: none;
					}
				}
			}

			h4.box-title {
				border-color: color("border-lighter");
				color: color("text");
				// font-family: inherit;
			}

			ul.attributes li.attribute {
				border: b("border-lighter");

				.attribute-value {
					// font-family: inherit;
				}

				.attribute-footer {
					// font-family: inherit;
				}
			}

			.ability-scores {
				border: b("border-lighter");
				// font-family: inherit;

				.ability {
					border-block-end: b("border-lighter");

					&:last-child {
						border-block-end: none;
					}

					.ability-modifiers span.ability-mod,
					.ability-modifiers span.ability-save {
						border-block-start: b("border-lighter");
					}

					.ability-modifiers span.ability-mod {
						border-inline-end: b("border-lighter");
					}

					.ability-modifiers span.ability-save {
						border-inline-start: b("border-lighter");
					}
				}
			}

			.proficiency-toggle {
				color: color("text-darker");
			}

			.proficient .proficiency-toggle {
				color: color("text");
			}

			.locked .proficiency-toggle {
				color: color("text-darker");
			}

			ul.skills-list {
				border: b("border-lighter");

				li.skill .skill-passive {
					color: color("text-darker");
				}
			}

			.counters {
				border-block-end: b("border-lighter");

				.counter h4 {
					color: color("text");
				}
			}

			.traits i.fas {
				color: color("text");

				&:hover {
					color: color("primary");
					text-shadow: none;
				}
			}

			.traits .inactive {
				color: color("text");
				opacity: 0.5;
			}

			.inventory-filters .currency {
				label {
					color: color("text");
				}

				input[type="text"] {
					border: b("border");
				}
			}

			.inventory-list {
				.item .item-name i {
					&.attuned {
						color: color("primary");
					}

					&.not-attuned {
						color: color("text-darker");
					}
				}

				.item-detail {
					border-color: color("border-lighter");
				}

				.item-weight {
					border-color: color("border-lighter");
				}

				.item-summary {
					border-color: color("border-lighter");
					color: color("text");
				}
			}

			.encumbrance {
				border-color: color("border");

				.encumbrance-bar {
					background-color: color("primary");
					border-color: color("border-lighter");
				}

				.encumbrance-label {
					color: color("text-lightest");
					text-shadow: none;
				}

				.arrow-up,
				.arrow-down {
					border-color: color("border-lighter");
				}

				&.encumbered {
					.arrow-up,
					.arrow-down {
						border-color: color("border");
					}
				}
			}

			.spell-slots,
			.spell-comps {
				border-color: color("border-lighter");
				color: color("text");
			}

			.spellbook .spell-uses {
				color: color("text");
			}

			.spell-school,
			.spell-action,
			.spell-target {
				border-color: color("border-lighter");
				color: color("text");
			}

			.spell-component.C,
			.spell-component.R {
				color: color("text-lightest");
			}

			.features i.original-class {
				color: color("text-darker");
			}
		}

		&.sheet.item {
			.sheet-header {
				img.profile {
					border: b("border");
				}

				.item-subtitle {
					color: color("text");
				}
			}

			.sheet-body .item-properties .properties-list li {
				border: b("border-lighter");
			}

			.details input[type="text"],
			.details input[type="number"],
			.details select {
				border-color: color("border");
			}

			h4.damage-header {
				color: color("text");
			}

			.damage-control {
				color: color("text");
			}
		}

		&.sheet.actor.character {
			.sheet-header {
				.charlevel {
					color: color("text");
				}

				.experience span.max {
					color: color("text");
				}

				.xpbar {
					background-color: color("background");
					border-color: color("border");

					&.bar {
						background-color: color("primary");
						border: color("border");
					}
				}

				.attributes a.rest {
					border-color: color("border-lighter");
				}
			}

			.resource .attribute-value label.recharge {
				color: color("text");
				// font-family: inherit;
			}

			.inventory .item-controls .item-toggle,
			.spellbook .item-controls .item-toggle {
				color: color("text-darker");
			}

			.inventory .item-controls .item-toggle.active,
			.spellbook .item-controls .item-toggle.active {
				color: color("primary");
			}

			.inventory .item-controls .item-toggle.fixed,
			.spellbook .item-controls .item-toggle.fixed {
				color: color("text");
			}

			.characteristics {
				label {
					// font-family: inherit;
				}

				textarea {
					border-color: color("border-lighter");
					// font-family: inherit;
				}
			}
		}

		&.sheet.actor.npc {
			.header-exp .experience {
				color: color("text");
			}
		}

		&.sheet.actor.vehicle {
			.features .item-controls .item-toggle {
				color: color("text-darker");

				&.active {
					color: color("primary");
				}
			}
		}

		.modesto {
			// font-family: inherit;
		}
	}

	#ability-use-form {
		label.checkbox {
			@include layout {
				flex: 1 1 auto;

				input[type="checkbox"] {
					margin: 0;
					margin-inline-end: $global-space-sm;
				}
			}
		}
	}

	[id*="actor-flags-"],
	[id*="actor-type-"],
	[id*="ActorSkillConfig-"],
	[id*="ActorSensesConfig"],
	[id*="ActorAbilityConfig"],
	[id*="ActorMovementConfig"],
	[id*="TraitSelector"],
	[id*="ProficiencySelector"],
	[id*="ActorSheetFlags"] {
		@import "../base/base-button";
		@import "../base/base-form-elements";
		@import "../base/base-forms";
		@import "../base/base-text";
	}

	[id*="actor-type-"] {
		input[name="preview"]:disabled {
			@include layout {
				padding: 0;
			}
		}
	}

	.trait-selector.subconfig {
		ol.trait-list > li {
			@include layout {
				align-items: flex-start;
				flex-direction: column;
			}
		}
	}

	.trait-selector.actor-type {
		.trait-list {
			.radio {
				input {
					margin-inline-end: $global-space-base;
				}
			}
		}
	}

	.hd-config.dialog {
		.window-content {
			@include layout {
				padding: $global-space-sm;

				.form-group {
					padding: $global-space-sm 0;

					.form-fields {
						flex-wrap: nowrap;

						button {
							&:first-child {
								margin: 0;
							}

							+ input {
								margin-inline-start: $global-space-base;
								order: initial;
							}
						}

						.sep {
							margin-inline-start: $global-space-base;
						}

						.current,
						.max {
							flex: 1;
						}

						.roll-hd {
							flex: 1 1 100%;
						}
					}
				}

				.dialog-buttons {
					margin-block-start: $global-space-base;
					padding: 0;
				}
			}
		}
	}

	#long-rest {
		> p {
			@include layout {
				margin-block-start: 0;
			}
		}
	}

	#short-rest-hd {
		@include layout {
			padding-block-start: $global-space-sm;

			.form-fields select {
				flex: 1 1 auto;
			}
		}
	}

	#sidebar,
	.sidebar-popout {
		.dnd5e.chat-card.item-card {
			@include layout {
				font-size: $global-font-size-sm;
			}

			.card-header {
				border-block-start: b("border-lighter");
				border-block-end: b("border-lighter");

				@include layout {
					margin-block-end: $global-space-base;
					padding: $global-space-base 0;

					img {
						flex: 0 0 to-rem(36px);
						margin-inline-end: $global-space-base;
					}
				}

				h3 {
					color: color("text");
					text-shadow: none;

					@include layout {
						align-items: center;
						display: inline-flex;
						font-family: inherit;
						line-height: initial;
						margin: 0;
					}
				}
			}

			.card-content {
				@include layout {
					margin: $global-space-base 0;
				}

				h3 {
					@include layout {
						font-size: $global-font-size-sm;
					}
				}
			}

			.card-buttons {
				@include layout {
					margin: $global-space-base 0;
				}

				button {
					border: b("border");

					@include layout {
						margin: 0;
					}

					+ button {
						@include layout {
							margin-block-start: $global-space-base;
						}
					}
				}
			}

			.card-footer {
				border-block-start: b("border-lighter");

				@include layout {
					margin-block-start: $global-space-base;
					padding-block-start: $global-space-base;
				}

				span {
					border-inline-end: b("border");

					@include layout {
						font-size: $global-font-size-xs;
						margin-inline-end: $global-space-xs;
						padding-inline-end: $global-space-base;
					}

					&:last-child {
						border-inline-end: none;
					}
				}
			}
		}
	}
}
